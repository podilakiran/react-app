{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kpodila\\\\PhpstormProjects\\\\react-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst reducerHandler = (state, action) => {\n  if (action.type == 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.state.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(reducerHandler, defaultCartState);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      'type': 'ADD',\n      'item': item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCartAction({\n      'type': 'REMOVE',\n      'id': id\n    });\n  };\n\n  const cartcontext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartcontext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/kpodila/PhpstormProjects/react-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","reducerHandler","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCart","removeItemFromCart","id","cartcontext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAzB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,IAAe,KAAnB,EAA0B;AACtB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACD,KAAP,CAAaQ,MAAhF;AAEA,WAAO;AACHX,MAAAA,KAAK,EAACM,YADH;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIH;;AAED,SAAOV,gBAAP;AACH,CAZD;;AAcA,MAAMa,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAAEK,cAAF,EAAkBH,gBAAlB,CAAlD;;AAEA,QAAMiB,aAAa,GAAIR,IAAD,IAAU;AAC5BO,IAAAA,kBAAkB,CAAC;AAAC,cAAQ,KAAT;AAAgB,cAAOP;AAAvB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMS,kBAAkB,GAAIC,EAAD,IAAQ;AAC/BH,IAAAA,kBAAkB,CAAC;AAAC,cAAQ,QAAT;AAAmB,YAAKG;AAAxB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,aAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBAAQ,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACHN,KAAK,CAACS;AADH;AAAA;AAAA;AAAA;AAAA,UAAR;AAGH,CArBD;;GAAMV,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount:0\r\n};\r\n\r\nconst reducerHandler = (state, action) => {\r\n    if (action.type == 'ADD') {\r\n        const updatedItems = state.items.concat(action.item);\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.state.amount;\r\n\r\n        return {\r\n            items:updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer( reducerHandler, defaultCartState );\r\n\r\n    const addItemToCart = (item) => {\r\n        dispatchCartAction({'type': 'ADD', 'item':item});\r\n    };\r\n\r\n    const removeItemFromCart = (id) => {\r\n        dispatchCartAction({'type': 'REMOVE', 'id':id});\r\n    }\r\n\r\n    const cartcontext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCart,\r\n        removeItem: removeItemFromCart,\r\n    };\r\n\r\n    return (<CartContext.Provider value={cartcontext}>\r\n        {props.children}\r\n    </CartContext.Provider>)\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}